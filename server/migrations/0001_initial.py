# Generated by Django 5.0.1 on 2024-03-07 08:41

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='ModelControlledBridge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=100, unique=True, verbose_name='Наименование')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModelDrivingBridge',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=100, unique=True, verbose_name='Наименование')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModelEngine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=100, unique=True, verbose_name='Наименование')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModelMachine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=100, unique=True, verbose_name='Наименование')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='ModelTransmission',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Наименование', max_length=100, unique=True, verbose_name='Наименование')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='NodeRefusal',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='RecoveryMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='TypeTechnicalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
                ('login', models.ForeignKey(blank=True, help_text='Логин', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Логин')),
            ],
            options={
                'verbose_name': 'Покупатель',
                'verbose_name_plural': 'Покупатели',
            },
        ),
        migrations.CreateModel(
            name='Manager',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
                ('login', models.ForeignKey(blank=True, help_text='Логин', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Логин')),
            ],
            options={
                'verbose_name': 'Менеджер',
                'verbose_name_plural': 'Менеджеры',
            },
        ),
        migrations.CreateModel(
            name='ServiceCompany',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Название', max_length=100, unique=True, verbose_name='Название')),
                ('description', models.TextField(help_text='Описание', unique=True, verbose_name='Описание')),
                ('relevance', models.BooleanField(default=True)),
                ('login', models.ForeignKey(blank=True, help_text='Логин', null=True, on_delete=django.db.models.deletion.SET_NULL, to=settings.AUTH_USER_MODEL, verbose_name='Логин')),
            ],
            options={
                'verbose_name': 'Сервисная компания',
                'verbose_name_plural': 'Сервисные компании',
            },
        ),
        migrations.CreateModel(
            name='Machine',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('factoryNumMachine', models.CharField(help_text='Заводской номер машины', max_length=100, unique=True, verbose_name='Заводской номер машины')),
                ('factoryNumEngine', models.CharField(help_text='Заводской номер двигателя', max_length=100, unique=True, verbose_name='Заводской номер двигателя')),
                ('factoryNumTransmission', models.CharField(help_text='Заводской номер трансмиссии', max_length=100, unique=True, verbose_name='Заводской номер трансмиссии')),
                ('factoryNumDrivingBridge', models.CharField(help_text='Заводской номер ведущего моста', max_length=100, unique=True, verbose_name='Заводской номер ведущего моста')),
                ('factoryNumControlledBridge', models.CharField(help_text='Заводской номер управляемого моста', max_length=100, unique=True, verbose_name='Заводской номер управляемого моста')),
                ('deliveryAgreementData', models.CharField(help_text='Договор поставки  (Номер и  дата)', max_length=100, verbose_name='Договор поставки  (Номер и  дата)')),
                ('shipmentDate', models.DateField(help_text='Дата отгрузки с завода', max_length=100, verbose_name='Дата отгрузки с завода')),
                ('reciver', models.CharField(help_text='Грузополучатель  (конечный потребитель)', max_length=100, verbose_name='Грузополучатель  (конечный потребитель)')),
                ('deliveryAddress', models.CharField(help_text='Адрес доставки', max_length=100, verbose_name='Адрес доставки')),
                ('equipment', models.CharField(help_text='Комплектация (доп. опции)', max_length=100, verbose_name='Комплектация (доп. опции)')),
                ('client', models.ForeignKey(blank=True, help_text='Клиент', null=True, on_delete=django.db.models.deletion.CASCADE, to='server.client', verbose_name='Клиент')),
                ('modelControlledBridge', models.ForeignKey(help_text='Модель управляемого моста', on_delete=django.db.models.deletion.CASCADE, to='server.modelcontrolledbridge', verbose_name='Модель управляемого моста')),
                ('modelDrivingBridge', models.ForeignKey(help_text='Модель ведущего моста', on_delete=django.db.models.deletion.CASCADE, to='server.modeldrivingbridge', verbose_name='Модель ведущего моста')),
                ('modelEngine', models.ForeignKey(help_text='Модель двигателя', on_delete=django.db.models.deletion.CASCADE, to='server.modelengine', verbose_name='Модель двигателя')),
                ('modelMachine', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='server.modelmachine', verbose_name='Модель машины')),
                ('modelTransmission', models.ForeignKey(help_text='Модель трансмиссии', on_delete=django.db.models.deletion.CASCADE, to='server.modeltransmission', verbose_name='Модель трансмиссии')),
                ('serviceCompany', models.ForeignKey(help_text='Сервисная компания (при покупке)', on_delete=django.db.models.deletion.CASCADE, to='server.servicecompany', verbose_name='Сервисная компания')),
            ],
        ),
        migrations.CreateModel(
            name='Complaint',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('refusalDate', models.DateField(help_text='Дата отказа', verbose_name='Дата отказа')),
                ('operatingHours', models.PositiveIntegerField(help_text='Наработка, м/час', verbose_name='Наработка, м/час')),
                ('descriptionRefusal', models.TextField(help_text='Описание отказа', verbose_name='Описание отказа')),
                ('sparePartsUsed', models.TextField(blank=True, help_text='Используемые зап. части', verbose_name='Используемые зап. части')),
                ('recoveryDate', models.DateField(help_text='Дата восстановления', verbose_name='Дата восстановления')),
                ('downtime', models.PositiveIntegerField(help_text='Время простоя в часах', verbose_name='Время простоя в часах')),
                ('factoryNumMachine', models.ForeignKey(help_text='Заводской номер машины', on_delete=django.db.models.deletion.CASCADE, to='server.machine', verbose_name='Заводской номер машины')),
                ('nodeRefusal', models.ForeignKey(help_text='Узел отказа', on_delete=django.db.models.deletion.CASCADE, to='server.noderefusal', verbose_name='Узел отказа')),
                ('recoveryMethod', models.ForeignKey(help_text='Способ восстановления', on_delete=django.db.models.deletion.CASCADE, to='server.recoverymethod', verbose_name='Способ восстановления')),
                ('serviceCompany', models.ForeignKey(help_text='Сервисная компания', on_delete=django.db.models.deletion.CASCADE, to='server.servicecompany', verbose_name='Сервисная компания')),
            ],
        ),
        migrations.CreateModel(
            name='TechnicalService',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('technicalServiceDate', models.DateField(help_text='Дата ТО', max_length=100, verbose_name='Дата ТО')),
                ('operatingHours', models.PositiveIntegerField(help_text='Наработка, м/час', verbose_name='Наработка, м/час')),
                ('orderNum', models.CharField(help_text='Номер заказ-наряда', max_length=100, unique=True, verbose_name='Номер заказ-наряда')),
                ('orderDate', models.DateField(help_text='Дата заказ-наряда', verbose_name='Дата заказ-наряда')),
                ('factoryNumMachine', models.ForeignKey(help_text='Заводской номер машины', on_delete=django.db.models.deletion.CASCADE, to='server.machine', verbose_name='Заводской номер машины')),
                ('serviceCompany', models.ForeignKey(help_text='Сервисная компания', on_delete=django.db.models.deletion.CASCADE, to='server.servicecompany', verbose_name='Сервисная компания')),
                ('typeTechnicalService', models.ForeignKey(help_text='Тип ТО', on_delete=django.db.models.deletion.CASCADE, to='server.typetechnicalservice', verbose_name='Тип ТО')),
            ],
        ),
    ]
